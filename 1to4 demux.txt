1to4 demux:
code:

module demux_1to4 (input D,input [1:0] S,output Y0, Y1, Y2, Y3 );
  assign Y0 = D & ~S[1] & ~S[0];  
  assign Y1 = D & ~S[1] &  S[0];  
  assign Y2 = D &  S[1] & ~S[0];  
  assign Y3 = D &  S[1] &  S[0]; 
endmodule

tb:
module tb_demux_1to4;
  reg D;
  reg [1:0] S;
  wire Y0, Y1, Y2, Y3;
  demux_1to4 uut ( .D(D), .S(S), .Y0(Y0),.Y1(Y1),.Y2(Y2),.Y3(Y3));
  initial begin
    $dumpfile("demux_1to4.vcd");
    $dumpvars(0, tb_demux_1to4); 
    D = 0; S = 2'b00; #10;
    D = 0; S = 2'b01; #10;
    D = 0; S = 2'b10; #10;
    D = 0; S = 2'b11; #10;
    D = 1; S = 2'b00; #10;
    D = 1; S = 2'b01; #10;
    D = 1; S = 2'b10; #10;
    D = 1; S = 2'b11; #10;
    $finish;
  end
  initial begin
    $display("Time\tD\tS\tY0\tY1\tY2\tY3");
    $monitor("%g\t%b\t%b\t%b\t%b\t%b\t%b", $time, D, S, Y0, Y1, Y2, Y3);
  end
endmodule

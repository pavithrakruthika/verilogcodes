4:1mux:
code:

module mux4_1 ( input [1:0] sel,input i0, i1, i2, i3, output y);
assign y = (sel == 2'b00) ? i0 :(sel == 2'b01) ? i1 :(sel == 2'b10) ? i2 :i3;
endmodule


tb:

`timescale 1ns / 1ps
module tb_mux4_1;
  reg [1:0] sel;
  reg i0, i1, i2, i3;
  wire y;
  mux4_1 uut (.sel(sel), .i0(i0), .i1(i1), .i2(i2), .i3(i3), .y(y));
  initial begin
    $dumpfile("mux4_1.vcd");
    $dumpvars(0, tb_mux4_1);
    $display("Time | sel | i0 i1 i2 i3 | y");
    $monitor("%4t | %b |  %b  %b  %b  %b | %b", $time, sel, i0, i1, i2, i3, y);
    sel = 2'b00; i0 = 1; i1 = 0; i2 = 0; i3 = 0; #10;
    sel = 2'b01; #10;
    sel = 2'b10; #10;
    sel = 2'b11; #10;
    i0 = 0; i1 = 1; i2 = 1; i3 = 0; sel = 2'b00; #10;
    sel = 2'b01; #10;
    sel = 2'b10; #10;
    sel = 2'b11; #10;
    $finish;
  end
endmodule

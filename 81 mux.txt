8:1 mux:
code:

module mux8_1 (input [2:0] sel,input [7:0] data_in,output wire y);
assign y = (sel == 3'b000) ? data_in[0] :
           (sel == 3'b001) ? data_in[1] :
           (sel == 3'b010) ? data_in[2] :
           (sel == 3'b011) ? data_in[3] :
           (sel == 3'b100) ? data_in[4] :
           (sel == 3'b101) ? data_in[5] :
           (sel == 3'b110) ? data_in[6] :
           data_in[7];

endmodule



tb:

`timescale 1ns / 1ps
module tb_mux8_1;
  reg [2:0] sel;
  reg [7:0] data_in;
  wire y;
  mux8_1 uut (.sel(sel),.data_in(data_in),.y(y));
  initial begin
    $dumpfile("mux8_1.vcd");
    $dumpvars(0, tb_mux8_1);
    $display("Time | sel | data_in | y");
    $monitor("%4t |  %b  | %b | %b", $time, sel, data_in, y);
    data_in = 8'b10101010; sel = 3'b000; #10;
    sel = 3'b001; #10;
    sel = 3'b010; #10;
    sel = 3'b011; #10;
    sel = 3'b100; #10;
    sel = 3'b101; #10;
    sel = 3'b110; #10;
    sel = 3'b111; #10;
    $finish;
  end

endmodule

